<?php

const NL = " <br>\n";

// 1. С помощью цикла while вывести все числа в промежутке от 0 до 100, которые делятся на 3 без остатка.

$i = -1;
while (++$i <= 100){
	if ($i % 3 == 0) echo "$i ";
}

echo NL.NL;
// 2. С помощью цикла do…while написать функцию для вывода чисел от 0 до 10, чтобы результат выглядел так:
// 0 – это ноль.
// 1 – нечётное число.
// 2 – чётное число.
// 3 – нечётное число.
// …
// 10 – чётное число.

function even_parity($a = 0){
	do {
		if ($a == 0) echo "$a - это ноль" . NL;
		else echo "$a - " . ( $a % 2 == 0 ? "четное" : "нечетное" ) . " число" . NL;
	} while (++$a <= 10);
}

even_parity();
echo NL.NL;
// 3. Объявить массив, в котором в качестве ключей будут использоваться названия областей, а в качестве значений – массивы с названиями городов из соответствующей области.
// Вывести в цикле значения массива, чтобы результат был таким:
// Московская область:
// Москва, Зеленоград, Клин.
// Ленинградская область:
// Санкт-Петербург, Всеволожск, Павловск, Кронштадт.
// Рязанская область…(названия городов можно найти на maps.yandex.ru)

$regions = [
	"Московская" => ["Москва", "Зеленоград", "Клин"]
	,"Ленинградская" => ["Санкт-Петербург", "Всеволожск", "Павловск", "Кронштадт"]
	,"Рязанская" => ["Рязань", "Касимов", "Скопин", "Сасово"]
];

foreach ($regions as $key => $val) {
	echo "$key область:", NL, implode(', ', $val), NL;
}

echo NL.NL;
// 4. Объявить массив, индексами которого являются буквы русского языка, а значениями – соответствующие латинские буквосочетания (‘а’=> ’a’, ‘б’ => ‘b’, ‘в’ => ‘v’, ‘г’ => ‘g’, …, ‘э’ => ‘e’, ‘ю’ => ‘yu’, ‘я’ => ‘ya’).
// Написать функцию транслитерации строк.

function translit($val)
{
	$pairs = [
		'а' => 'a',    'б' => 'b',    'в' => 'v',    'г' => 'g',    'д' => 'd',
		'е' => 'e',    'ё' => 'e',    'ж' => 'zh',   'з' => 'z',    'и' => 'i',
		'й' => 'y',    'к' => 'k',    'л' => 'l',    'м' => 'm',    'н' => 'n',
		'о' => 'o',    'п' => 'p',    'р' => 'r',    'с' => 's',    'т' => 't',
		'у' => 'u',    'ф' => 'f',    'х' => 'h',    'ц' => 'c',    'ч' => 'ch',
		'ш' => 'sh',   'щ' => 'sch',  'ь' => '',     'ы' => 'y',    'ъ' => '',
		'э' => 'e',    'ю' => 'yu',   'я' => 'ya',

		'А' => 'A',    'Б' => 'B',    'В' => 'V',    'Г' => 'G',    'Д' => 'D',
		'Е' => 'E',    'Ё' => 'E',    'Ж' => 'Zh',   'З' => 'Z',    'И' => 'I',
		'Й' => 'Y',    'К' => 'K',    'Л' => 'L',    'М' => 'M',    'Н' => 'N',
		'О' => 'O',    'П' => 'P',    'Р' => 'R',    'С' => 'S',    'Т' => 'T',
		'У' => 'U',    'Ф' => 'F',    'Х' => 'H',    'Ц' => 'C',    'Ч' => 'Ch',
		'Ш' => 'Sh',   'Щ' => 'Sch',  'Ь' => '',     'Ы' => 'Y',    'Ъ' => '',
		'Э' => 'E',    'Ю' => 'Yu',   'Я' => 'Ya',
	];

	$val = strtr($val, $pairs);
	return $val;
}

echo translit('Функция транслитерации строк'), NL, NL;

// 5. Написать функцию, которая заменяет в строке пробелы на подчеркивания и возвращает видоизмененную строчку.

function space_to_underscore($str){
	return str_replace(' ','_',$str);
}

echo space_to_underscore("Написать функцию, которая заменяет в строке пробелы на подчеркивания и возвращает видоизмененную строчку"), NL, NL;

// 6. В имеющемся шаблоне сайта заменить статичное меню (ul - li) на генерируемое через PHP. Необходимо представить пункты меню как элементы массива и вывести их циклом. Подумать, как можно реализовать меню с вложенными подменю? Попробовать его реализовать.

require_once "menu_example.php";

// 7. *Вывести с помощью цикла for числа от 0 до 9, НЕ используя тело цикла. Выглядеть это должно так:
// for(…){// здесь пусто}

for ( $i = 0; $i <= 9 ; print "$i ", $i++ ) { }

echo NL.NL;
// 8. *Повторить третье задание, но вывести на экран только города, начинающиеся с буквы «К».

foreach ($regions as $citys) {
	array_map( function($city){ echo mb_substr($city, 0, 1) == 'К' ? $city . NL : ''; }, $citys );
}

echo NL.NL;
// 9. *Объединить две ранее написанные функции в одну, которая получает строку на русском языке, производит транслитерацию и замену пробелов на подчеркивания (аналогичная задача решается при конструировании url-адресов на основе названия статьи в блогах).

function str_to_url($str){ return space_to_underscore(translit($str)); };

echo str_to_url('Объединить две ранее написанные функции в одну');
